{"name":"Validator.js","tagline":"A Laravel styled JavaScript Object/Form/JSON validation library.","body":"# validator.js\r\n[![npm version](https://badge.fury.io/js/js-validator.svg)](http://badge.fury.io/js/js-validator)\r\n[![GitHub version](https://badge.fury.io/gh/ppoffice%2Fvalidator.js.svg)](http://badge.fury.io/gh/ppoffice%2Fvalidator.js)\r\n\r\nLaravel风格的**JavaScript对象/表单/JSON**验证库。| [English Version](README.en.md) | [Laravel Validation](http://laravel.com/docs/5.0/validation)\r\n* 支持不同验证规则组合\r\n* 支持复杂对象的递归验证\r\n* 支持添加自定义验证器\r\n\r\n## 举个例子\r\n```javascript\r\nvar example = {\r\n      text: 'Hello world!',\r\n      date: '2015-07-07',\r\n      attachment: {\r\n        name: 'note1',\r\n        count: 1,\r\n      },\r\n      comments: null,\r\n    },\r\n    rules = {\r\n      text: 'required|string',\r\n      date: 'date|date_format:yyyy-MM-dd',\r\n      attachment: {\r\n        name: 'required|string',\r\n        content: 'integer',\r\n      },\r\n      comments: 'array',\r\n    };\r\n\r\nconsole.log(Validator.validate(example, rules));\r\n// failed => [{object: [Object], field: \"comments\", rule: \"array\"}]\r\n```\r\n\r\n## 基本用法\r\n\r\n### 引入validator.js（原生JavaScript）\r\n```html\r\n<script type=\"text/javascript\" src=\"./src/validator.js\"></script>\r\n```\r\n或\r\n```html\r\n<script type=\"text/javascript\" src=\"./dist/validator.min.js\"></script>\r\n```\r\n\r\n### 初始化（非原生JavaScript）\r\n\r\n#### Node.js\r\n```bash\r\nnpm install js-validator --save\r\n```\r\n```javascript\r\nvar validator = require('js-validator');\r\n```\r\n\r\n#### RequireJS\r\n```javascript\r\nrequirejs([\"../src/validator\"], function(validator) {\r\n  ...\r\n});\r\n```\r\n\r\n#### Sea.js\r\n```javascript\r\ndefine(function (require, exports, module) {\r\n  var validator = require('./validator');\r\n  ...\r\n});\r\n```\r\n\r\n### 制定验证规则\r\n对于同一个对象属性，你可以并列制定几个不同的规则进行限定，使用`|`作为不同规则间的分割符。\r\n```javascript\r\nvar rules = {\r\n  text: 'required|string',\r\n  date: 'date|date_format:yyyy-MM-dd',\r\n  comments: 'integer',\r\n};\r\n```\r\n\r\n### 验证\r\n```javascript\r\n// Validator.validate if you are using native JavaScript code\r\nvalidator.validate(object_to_be_tested, rules);\r\n```\r\n如果待验证对象符合规则，validate函数返回true；否则返回带有验证状态、失败的属性和对应失败的规则信息的对象。\r\n\r\n### 添加验证器\r\n使用add方法为Validator添加验证器，第一个参数为验证器名称，第二个参数为验证方法，可以为正则表达式对象或者函数。当验证方法为函数时，其第一个参数为待验证的对象，第二个参数为当前验证域的值，后面的参数根据需求而定，验证成功时结果返回true。\r\n```javascript\r\n// Validator.add if you are using native JavaScript code\r\nvalidator.add('older_than', function (object, value, age) {\r\n  return value > age;\r\n});\r\n\r\nvar rules = {\r\n  age: 'integer|older_than:17',\r\n};\r\n```\r\n\r\n### 配置\r\n```javascript\r\n// Validator.setConfig if you are using native JavaScript code\r\nvalidator.setConfig({...});\r\n```\r\n### 可用配置\r\n\r\n#### resumeOnFailed\r\n**默认值** false\r\n\r\n当某条验证失败时是否继续其他规则的验证。为true时继续验证。\r\n\r\n## 可用的验证规则\r\n\r\n#### accepted\r\n验证域必须为yes、on、1、或者true。 这个规则常用语验证“同意使用条款”表单。\r\n\r\n\r\n#### after:date\r\n验证的日期域的日期必须在指定日期之后。\r\n\r\n\r\n#### alpha\r\n验证域必须由纯英文字符组成。\r\n\r\n\r\n#### alpha_dash\r\n验证域必须由英文字符、数字、中划线或者下划线组成。\r\n\r\n\r\n#### alpha_num\r\n验证域必须由英文字符或者数字组成。\r\n\r\n\r\n#### array\r\n验证域必须为数组对象。\r\n\r\n\r\n#### before:date\r\n验证的日期域的日期必须在给定日期之前。\r\n\r\n\r\n#### between:min,max\r\n验证域的值必须在min和max之间，验证域可以是字符串、数字或者文件对象(FileList/File)。文件大小单位为KB。\r\n\r\n\r\n#### boolean\r\n验证域的值可以看作是布尔值，可以是true，false，1，0，\"1\"，\"0\"，'1' and '0'。\r\n\r\n\r\n#### date\r\n验证域必须为日期字符串形式，可以被Date.parse方法解析。\r\n\r\n\r\n#### date_format:format\r\n验证域必须符合制定的日期格式，允许的日期格式参照源代码中的dateFormat方法。\r\n\r\n\r\n#### different:field\r\n验证域的值必须域指定域的值不同。\r\n\r\n\r\n#### digits:value\r\n验证域必须为数字，且其位数为给定的位数。\r\n\r\n\r\n#### digits_between:min,max\r\n验证域必须为数字，且其位数在min和max之间。\r\n\r\n\r\n#### email\r\n验证域必须为电子邮件地址格式。\r\n\r\n\r\n#### in:foo,bar,...\r\n验证域的值必须在给定的允许值列表中。\r\n\r\n\r\n#### integer\r\n验证值必须为整数。\r\n\r\n\r\n#### ip\r\n验证值必须为IP地址形式（支持IPv4与IPv6）。\r\n\r\n\r\n#### max:value\r\n验证域的值必须小于等于max，验证域可以是字符串、数字或者文件对象(FileList/File)。文件大小单位为KB。\r\n\r\n\r\n#### mimes:foo,bar,...\r\n验证值的扩展名必须在给定的扩展名列表中。\r\n\r\n\r\n#### min:value\r\n验证域的值必须大于等于min，验证域可以是字符串、数字或者文件对象(FileList/File)。文件大小单位为KB。\r\n\r\n\r\n#### not_in:foo,bar,...\r\n验证域的值必须不在给定的值列表中。\r\n\r\n\r\n#### numeric\r\n验证域必须为数字。\r\n\r\n\r\n#### regex\r\n验证域必须符合指定的正则表达式（JavaScript风格）。\r\n\r\n\r\n#### required\r\n验证域必须存在。\r\n\r\n\r\n#### required_if:field,value,...\r\n如果给定的域的值等于给定的值，验证域必须存在。这里的条件可以是多个域和值，它们之间的关系为“与”。\r\n\r\n\r\n#### required_with:foo,bar,...\r\n如果给定的域之中任何一个存在的话，验证域必须存在。\r\n\r\n\r\n#### required_with_all:foo,bar,...\r\n仅当所有给定的域存在时，验证域必须存在。\r\n\r\n\r\n#### required_without:foo,bar,...\r\n如果给定的域之中任何一个不存在的话，验证域必须存在。\r\n\r\n\r\n#### required_without_all:foo,bar,...\r\n仅当所有给定的所有域都不存在时，验证域必须存在。\r\n\r\n\r\n#### same\r\n验证域的值必须域指定域的值相同。\r\n\r\n\r\n#### size:value\r\n验证域的大小必须等于指定大小。对于字符串来说，验证域的字符串长度必须等于给定长度。对于数字来说，验证域的值必须等于给定值。对于文件(FileList/File)来说，文件的大小必须等于给定值（单位为KB）。\r\n\r\n\r\n#### string\r\n验证域必须为字符串。\r\n\r\n\r\n#### url\r\n验证域必须为URL地址。当前不支持含有非英文（中文等）字符的地址。\r\n\r\n\r\n## 测试文件入口\r\n`./test/index.html`     原生JavaScript支持测试\r\n\r\n`./test/node.js`        Node.js支持测试\r\n\r\n`./test/requirejs.html` RequireJS支持测试\r\n\r\n`./test/seajs.html` Sea.js支持测试\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}